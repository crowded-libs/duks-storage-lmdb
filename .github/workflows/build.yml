name: Build and Test

on:
  push:
    branches:
      - main
      - '**' # This will run on all branches
    paths-ignore:
      - '**.md' # Ignore markdown files (like README.md)
      - '.gitignore'
      - 'LICENSE'
      - 'docs/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md' # Ignore markdown files (like README.md)
      - '.gitignore'
      - 'LICENSE'
      - 'docs/**'
  workflow_dispatch: # Manual trigger

jobs:
  # Check if we should run the workflow based on changes
  changes:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.filter.outputs.src_changed }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            src_changed:
              - 'storage-lmdb/**'
              - 'build.gradle.kts'
              - 'gradle.properties'
              - 'settings.gradle.kts'
              - '.github/workflows/**'
  
  build:
    name: Build and Test on ${{ matrix.os }}
    needs: changes
    if: ${{ needs.changes.outputs.should_run == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Cache Kotlin Native compiler and Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-konan-gradle-${{ hashFiles('**/*.kts', 'gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-konan-gradle-
            ${{ runner.os }}-konan-
            ${{ runner.os }}-

      - name: Build and test JVM
        run: ./gradlew build --info

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: |
            **/build/reports/tests/
            **/build/test-results/
          retention-days: 7
          
      - name: Test Summary
        uses: test-summary/action@v2
        if: always()
        with:
          paths: "**/build/test-results/**/TEST-*.xml"
          show: "fail, skip"
          
      - name: Set Build Status Badge
        if: github.ref == 'refs/heads/main' && always() && runner.os != 'Windows'
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "BUILD_STATUS=Passing" >> $GITHUB_ENV
          else
            echo "BUILD_STATUS=Failing" >> $GITHUB_ENV
          fi
          echo "Build Status: ${{ env.BUILD_STATUS }}"